#!/usr/bin/python

import sys,getopt,os,io

"""
parse query result log generated by files such as qa.sh
outputs a csv file, order is below in variable "header", which it prints as first csv line.

sample valid log lines:
qd selectivity=unique pool=j10m nthreads=10 cls= run2=0.042547414
qf-proj selectivity=1% pool=j10m nthreads=10 cls=--use-cls run1=0.088086010
qf-proj selectivity=10% pool=j10m nthreads=10 cls= run2=0.066515477
qf selectivity=1% pool=j10m nthreads=10 cls=--use-cls run2=0.086538418
qe selectivity=100% pool=j10m nthreads=10 cls=--use-cls run1=0.102505547
"""

    
def makeDict(line,query):
    items = line.split()
    dict = {}
    for i in items:
        s = i.split("=")
        key = s[0]
        val = ""
        if len(s) > 1: val = s[1]
        if not val:
            val =  "N/A"
        if query.strip() in key:
            dict["query"] = key
        elif key.startswith('run'):
            dict["run"] = key  
            dict["time"] = val
        else: 
            dict[key] = val            
    return dict
        
def usage():
    print "usage: ./this.py --input <filename> [--query qX] [--debug]"
    sys.exit(2)
    
    
def main(argv):
    
    infile = ""
    query = ""
    debug = False
    try:
        opts, args = getopt.getopt(
            argv,
            "di:q:",
            ["debug","input=","query="])            
    except getopt.GetoptError:
        usage()
        
    for opt, arg in opts:
        if opt in ("-d", "--debug"):
            debug = True
        elif opt in ("-i", "--input"):
            infile = arg
        elif opt in ("-q", "--query"):
            query = arg
    
    if not infile:
        usage()
        
    header = ["filename", "query", "selectivity", "pool", "nthreads", "run", "time", "cls"]
    print ",".join(header)
    
    if not query:
        query = "q"
    else:
        query = query + " "

    with open(infile) as f:
        for line in f:
            if line.startswith(query):
                if debug: 
                    print "line=%s" % line.strip()                
                results = makeDict(line, query)
                results["filename"] = f.name
                data = ",".join(results[k] for k in header)
                print data
                
            
if __name__ == "__main__":
    main(sys.argv[1:])
